@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">
                <i class="fas fa-user-circle me-1"></i>
                @(user?.FirstName ?? user?.UserName)
            </a>
            <ul class="dropdown-menu dropdown-menu-end">
                <li>
                    <a class="dropdown-item" asp-controller="Profile" asp-action="Index">
                        <i class="fas fa-user me-2"></i>Profil
                    </a>
                </li>
                <li>
                    <a class="dropdown-item" asp-controller="Profile" asp-action="Settings">
                        <i class="fas fa-cog me-2"></i>Ayarlar
                    </a>
                </li>
                <li><hr class="dropdown-divider"></li>
                <li>
                    <form asp-controller="Account" asp-action="Logout" method="post">
                        <button type="submit" class="dropdown-item text-danger">
                            <i class="fas fa-sign-out-alt me-2"></i>Çıkış Yap
                        </button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="btn btn-outline-primary me-2" asp-controller="Account" asp-action="Login">
                <i class="fas fa-sign-in-alt me-1"></i>Giriş Yap
            </a>
        </li>
    }
</ul> 