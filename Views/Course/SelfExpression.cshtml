@model List<AutismEducationPlatform.Web.Models.ViewModels.MannersViewModel>

@{
    ViewData["Title"] = "Görgü Kuralları";
}

<link rel="stylesheet" href="/css/animals-bg.css" />

<div class="body-animals-bg" style="background-image: url('/images/animals/animal-bg-pattern.png'), linear-gradient(135deg, #FFB347 0%, #6B48FF 50%, #FF6B6B 100%); background-size: 300px, cover; background-repeat: repeat;">
    <div class="cloud"></div>
    <div class="cloud cloud2"></div>
    <div class="cloud cloud3"></div>
    <div class="container py-5">
        <div class="row justify-content-center mb-3">
            <div class="col-lg-10">
                @if (!User.Identity.IsAuthenticated)
                {
                    <div class="alert alert-info text-center mb-4" style="font-size:1.2rem;">
                        <i class="fas fa-info-circle me-2"></i>
                        İlerlemenizin kaydedilmesi için <a href="/Account/Login" class="alert-link">giriş yapın</a> veya <a href="/Account/Register" class="alert-link">kaydolun</a>.
                    </div>
                }
            </div>
        </div>
        <div class="row justify-content-center mb-5">
            <div class="col-lg-8 text-center">
                <h2 class="mb-3" style="font-size:2.5rem; font-weight:800; color:#6B48FF;" data-aos="fade-up">
                    <i class="fas fa-hands-helping me-2"></i> Görgü Kuralları
                </h2>
                <p class="lead" data-aos="fade-up" data-aos-delay="100">
                    Toplum içinde nasıl davranmamız gerektiğini öğrenelim!
                </p>
            </div>
        </div>
        <div class="row g-4">
            @foreach (var expression in Model)
            {
                var key = expression.Title.ToLower().Replace(" ", "").Replace("ı", "i").Replace("ğ", "g").Replace("ü", "u").Replace("ş", "s").Replace("ö", "o").Replace("ç", "c");
                <div class="col-md-6 col-lg-4" data-aos="zoom-in" data-aos-delay="@(Model.IndexOf(expression) * 100 + 200)">
                    <div class="card h-100 shadow-lg border-0 text-center p-4" style="background: linear-gradient(135deg, @(expression.Color.Replace("bg-", "#")) 0%, #6B48FF 100%); color: #fff; border-radius: 25px;">
                        <img src="@expression.ImagePath" alt="@expression.Title" class="img-fluid rounded mb-3" style="height:180px; object-fit:cover;">
                        <h4>@expression.Title</h4>
                        <p>@expression.Description</p>
                        <div class="mb-2">
                            <small><strong>Örnek:</strong> @expression.Example</small>
                        </div>
                        <div class="mb-2">
                            <small><strong>Doğru Davranış:</strong> @expression.CorrectBehavior</small>
                        </div>
                        <button class="btn btn-outline-light mb-3" onclick="playSoundAndProgress('@expression.SoundPath', '@key')">
                            <i class="fas fa-volume-up me-2"></i>Sesi Dinle
                        </button>
                        <div class="progress my-3" style="height: 20px;">
                            <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" id="progress-@key" role="progressbar" style="width: @(expression.Progress)%" data-progress="@expression.Progress">@(expression.Progress)%</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function playSoundAndProgress(soundPath, key) {
            var audio = new Audio(soundPath);
            audio.play();
            var progressBar = document.getElementById('progress-' + key);
            var currentProgress = parseInt(progressBar.getAttribute('data-progress')) || 0;
            var newProgress = currentProgress + 20;
            if (newProgress > 100) newProgress = 100;
            progressBar.style.width = newProgress + '%';
            progressBar.textContent = newProgress + '%';
            progressBar.setAttribute('aria-valuenow', newProgress);
            progressBar.setAttribute('data-progress', newProgress);
            
            // AJAX ile ilerlemeyi kaydet
            fetch('/Course/SaveMannerProgress', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ mannerName: key, progress: newProgress })
            })
            .then(response => response.json())
            .then(data => console.log('Progress saved:', data))
            .catch((error) => console.error('Error:', error));
        }
    </script>
} 