@model List<AutismEducationPlatform.Web.Models.ViewModels.TrafficSignViewModel>

@{
    ViewData["Title"] = "Trafik İşaretleri";
    Layout = "_ParentLayout";
}

<link rel="stylesheet" href="/css/animals-bg.css" />
<div class="body-animals-bg" style="background-image: url('/images/animals/animal-bg-pattern.png'), linear-gradient(135deg, #FFB347 0%, #6B48FF 50%, #FF6B6B 100%); background-size: 300px, cover; background-repeat: repeat;">
    <div class="cloud"></div>
    <div class="cloud cloud2"></div>
    <div class="cloud cloud3"></div>
    <div class="container py-5">
        <div class="row justify-content-center mb-5">
            <div class="col-lg-8 text-center">
                <h2 class="mb-3" style="font-size:2.5rem; font-weight:800; color:#6B48FF;" data-aos="fade-up">
                    <i class="fas fa-traffic-light me-2"></i> Trafik İşaretleri
                </h2>
                <p class="lead" data-aos="fade-up" data-aos-delay="100">
                    Trafik işaretlerini tanı, seslerini dinle ve ilerlemeni takip et!
                </p>
            </div>
        </div>
        <div class="row g-4">
            @foreach (var sign in Model)
            {
                var cardColor = sign.Name switch {
                    "Dur" => "background: linear-gradient(135deg, #FFB347 0%, #FF6B6B 100%);",
                    "Bisiklet" => "background: linear-gradient(135deg, #8C6CFF 0%, #1E90FF 100%);",
                    "Hastane" => "background: linear-gradient(135deg, #4CAF50 0%, #17A2B8 100%);",
                    "Işık" => "background: linear-gradient(135deg, #1E90FF 0%, #6B48FF 100%);",
                    "Okul" => "background: linear-gradient(135deg, #FFC107 0%, #4CAF50 100%);",
                    "Park" => "background: linear-gradient(135deg, #FFB347 0%, #4D96FF 100%);",
                    "Yaya" => "background: linear-gradient(135deg, #6B48FF 0%, #FF6B6B 100%);",
                    "Yön" => "background: linear-gradient(135deg, #17A2B8 0%, #FFB347 100%);",
                    _ => "background: linear-gradient(135deg, #FFB347 0%, #6B48FF 100%);"
                };
                <div class="col-md-6 col-lg-4" data-aos="zoom-in">
                    <div class="card h-100 shadow-lg border-0 text-center p-4" style="@cardColor color: #fff; border-radius: 25px; min-height: 520px;">
                        <img src="@sign.ImagePath" alt="@sign.Name" class="img-fluid rounded mb-3" style="height:320px; object-fit:contain; background: #fff;">
                        <h4>@sign.Name</h4>
                        <p>@sign.Description</p>
                        <button class="btn btn-outline-light mb-3" onclick="playSoundAndProgress('@sign.SoundPath', '@sign.Name', @sign.Id)"><i class="fas fa-volume-up me-2"></i>Sesi Dinle</button>
                        <div class="progress my-3" style="height: 20px;">
                            <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" id="progress-@sign.Name.ToLower()" role="progressbar" style="width: @sign.Progress%" data-progress="@sign.Progress">@sign.Progress%</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function playSoundAndProgress(soundPath, signName, signId) {
            var audio = new Audio(soundPath);
            audio.play();
            var progressBar = document.getElementById('progress-' + signName.toLowerCase());
            var currentProgress = parseInt(progressBar.getAttribute('data-progress')) || 0;
            var newProgress = currentProgress + 20;
            if (newProgress > 100) newProgress = 100;
            progressBar.style.width = newProgress + '%';
            progressBar.textContent = newProgress + '%';
            progressBar.setAttribute('aria-valuenow', newProgress);
            progressBar.setAttribute('data-progress', newProgress);
            // AJAX ile ilerlemeyi kaydet
            fetch('/Parent/SaveTrafficSignProgress', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ signName: signName, progress: newProgress, trafficSignId: signId })
            })
            .then(response => response.json())
            .then(data => console.log('Progress saved:', data))
            .catch((error) => console.error('Error:', error));
        }
    </script>
} 